# Generated by Django 4.1.5 on 2023-04-22 17:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TblMovies',
            fields=[
                ('movie_id', models.IntegerField(primary_key=True, serialize=False)),
                ('main_title', models.CharField(max_length=999)),
                ('original_title', models.CharField(max_length=999)),
                ('stripped_title', models.CharField(max_length=999)),
                ('alternative_title', models.CharField(max_length=999)),
                ('main_title_with_year', models.CharField(max_length=999)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('release_year', models.IntegerField()),
                ('link_to_the_movie', models.CharField(blank=True, max_length=999, null=True)),
                ('high_qual_link_to_the_movie', models.CharField(blank=True, max_length=999, null=True)),
                ('link_to_the_trailer', models.CharField(blank=True, max_length=999, null=True)),
                ('movie_description', models.CharField(blank=True, max_length=999, null=True)),
                ('imdb_site', models.CharField(blank=True, max_length=999, null=True)),
                ('id_relationship', models.IntegerField(blank=True, null=True)),
                ('based_on', models.CharField(blank=True, max_length=999, null=True)),
                ('imdb_rating', models.FloatField(blank=True, null=True)),
                ('roten_tomat_tomatometer', models.FloatField(blank=True, null=True)),
                ('roten_tomat_audience_score', models.FloatField(blank=True, null=True)),
                ('metacritic_meta_score', models.FloatField(blank=True, null=True)),
                ('metacritic_user_score', models.FloatField(blank=True, null=True)),
                ('filmweb_critics_score', models.FloatField(blank=True, null=True)),
                ('filmweb_user_score', models.FloatField(blank=True, null=True)),
                ('id_genres', models.IntegerField(blank=True, null=True)),
                ('id_alternative_genres', models.IntegerField(blank=True, null=True)),
                ('id_tags', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tbl_movies',
                'managed': False,
            },
        ),
    ]
